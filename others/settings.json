{
  "editor.acceptSuggestionOnEnter": "off",
  "editor.emptySelectionClipboard": true,
  "editor.fontSize": 11,
  "editor.tabSize": 2,
  "files.trimTrailingWhitespace": true,
  "editor.wordWrap": "on",
  "editor.formatOnPaste": true,
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.snippetSuggestions": "top",
  "terminal.external.osxExec": "iTerm.app",
  "editor.suggestSelection": "first",
  "emmet.includeLanguages": {
    "erb": "html",
    "ruby": "html"
  },
  "git.autofetch": true,
  "gitlens.advanced.messages": {
    "suppressLineUncommittedWarning": true
  },
  "files.autoSave": "afterDelay",
  "files.associations": {},
  "workbench.settings.enableNaturalLanguageSearch": false,
  "gitlens.menus": {
    "editor": {
      "blame": false,
      "clipboard": true,
      "compare": true,
      "history": false,
      "remote": false
    },
    "editorGroup": false,
    "editorTab": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "explorer": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": true
    },
    "scm": {
      "authors": true
    },
    "scmGroupInline": {
      "stash": true
    },
    "scmGroup": {
      "compare": true,
      "openClose": true,
      "stash": true
    },
    "scmItem": {
      "clipboard": true,
      "compare": true,
      "history": true,
      "remote": false,
      "stash": true
    }
  },
  "workbench.preferredDarkColorTheme": "Abyss",
  "terminal.integrated.gpuAcceleration": "off",
  "search.actionsPosition": "auto",
  "search.sortOrder": "fileNames",
  "search.useIgnoreFiles": false,
  "workbench.colorTheme": "Gruvbox Dark Hard",
  "workbench.colorCustomizations": {
    "editor.background": "#000000",
    "activityBar.background": "#000000",
    "sideBar.background": "#000000",
    "statusBar.background": "#000000",
    "panel.background": "#000000",
    "editorGroupHeader.tabsBackground": "#000000",
    "tab.inactiveBackground": "#000000",
    "tab.activeBackground": "#000000",
    "terminal.background": "#000000",
    "editorWidget.background": "#000000",
    "peekViewEditor.background": "#000000",
    "peekViewResult.background": "#000000",
    "editorCursor.foreground": "#b30000",
    "editor.selectionBackground": "#b30000",
    "activityBarBadge.background": "#b30000",
    "list.activeSelectionForeground": "#b30000",
    "list.inactiveSelectionForeground": "#b30000",
    "list.highlightForeground": "#b30000",
    "scrollbarSlider.activeBackground": "#b30000",
    "editorSuggestWidget.highlightForeground": "#b30000",
    "textLink.foreground": "#b30000",
    "progressBar.background": "#b30000",
    "pickerGroup.foreground": "#b30000",
    "tab.activeBorder": "#b30000",
    "notificationLink.foreground": "#b30000",
    "editorWidget.resizeBorder": "#b30000",
    "editorWidget.border": "#b30000",
    "settings.modifiedItemIndicator": "#b30000",
    "settings.headerForeground": "#b30000",
    "panelTitle.activeBorder": "#b30000",
    "breadcrumb.activeSelectionForeground": "#b30000",
    "menu.selectionForeground": "#b30000",
    "menubar.selectionForeground": "#b30000",
    "editorIndentGuide.background": "#2e0000",
    "editorIndentGuide.activeBackground": "#990000",
    "titleBar.activeBackground": "#000000",
    "titleBar.inactiveBackground": "#000000",
    "activityBarTop.activeBackground": "#000000",
    "activityBarTop.background": "#000000",
    "statusBar.noFolderBackground": "#000000",
    "statusBar.border": "#990000",
    "statusBar.noFolderBorder": "#990000",
  },
  "terminal.integrated.fontFamily": "MesloLGS NF",
  "editor.fontFamily": "'MesloLGS NF', 'monospace', monospace",
  "gitlens.views.workspaces.pullRequests.enabled": false,
  "editor.minimap.enabled": false,
  "[ruby]": {
    "editor.formatOnType": true,
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "files.trimTrailingWhitespace": true,
    "files.insertFinalNewline": true,
    "files.trimFinalNewlines": true,
    "editor.rulers": [
      120
    ],
    "editor.semanticHighlighting.enabled": true,
    "editor.guides.bracketPairs": "active"
  },
  "editor.guides.bracketPairs": true,
  "git.confirmSync": false,
  "solargraph.checkGemVersion": false,
  "workbench.tree.renderIndentGuides": "always",
  "search.quickOpen.includeSymbols": true,
  "search.smartCase": true,
  "editor.indentSize": "tabSize",
  "editor.detectIndentation": false,
  "html.completion.attributeDefaultValue": "empty",
  "workbench.settings.applyToAllProfiles": [
    "html.completion.attributeDefaultValue"
  ],
  "git.repositoryScanIgnoredFolders": [
    "node_modules",
    "plugins_*",
    "modules_*"
  ],
  "files.autoSaveDelay": 5000,
  "continue.telemetryEnabled": false,
  "continue.enableTabAutocomplete": false,
  "github.copilot.enable": {
    "*": true,
    "plaintext": false,
    "markdown": false,
    "scminput": false
  },
  "telemetry.telemetryLevel": "off",
  "[erb]": {
    "editor.defaultFormatter": "aliariff.vscode-erb-beautify"
  },
  "gitlens.ai.experimental.generateCommitMessage.enabled": false,
  "gitlens.focus.allowMultiple": false,
  "scm.alwaysShowRepositories": true,
  "search.exclude": {
    "**/.git": true,
    "**/.github": true,
    "**/node_modules": true,
    "**/bower_components": true,
    "**/tmp": true
  },
  "editor.tabCompletion": "on",
  "files.exclude": {
    "**/.git": false
  },
  "diffEditor.hideUnchangedRegions.enabled": true,
  "gitlens.launchpad.indicator.enabled": false,
  "editor.colorDecoratorsLimit": 2000,
  "workbench.layoutControl.enabled": false,
  "workbench.activityBar.location": "top",
  "window.customTitleBarVisibility": "never",
  "chat.agent.enabled": true,
  "github.copilot.chat.newWorkspaceCreation.enabled": false,
  "vim.enableNeovim": true,
  "vim.highlightedyank.enable": true,
  "vim.smartRelativeLine": true,
  "rubyLsp.enabledFeatures": {
    "codeActions": true,
    "diagnostics": true,
    "documentHighlights": true,
    "documentLink": true,
    "documentSymbols": true,
    "foldingRanges": true,
    "formatting": true,
    "hover": true,
    "inlayHint": true,
    "onTypeFormatting": true,
    "selectionRanges": true,
    "semanticHighlighting": true,
    "completion": true,
    "codeLens": true,
    "definition": true,
    "workspaceSymbol": true,
    "signatureHelp": true,
    "typeHierarchy": true
  },
  "github.copilot.chat.codeGeneration.instructions": [
    {
      "language": "ruby",
      "instruction": "Generate idiomatic Ruby on Rails code for Redmine plugins. Follow Rails 7 and Redmine plugin development best practices. Use strong parameters, service objects, and concerns where appropriate. Leverage the Redmine API and plugin conventions. Write clear, maintainable, and well-documented code. Prefer explicitness over cleverness."
    },
    {
      "language": "erb",
      "instruction": "Generate clean, maintainable ERB templates for Redmine plugin views. Use Rails view helpers and partials where appropriate. Ensure code is secure and avoids XSS vulnerabilities. Follow Rails and Redmine conventions for HTML structure and accessibility."
    },
    {
      "language": "javascript",
      "instruction": "Write JavaScript for Redmine plugins using jQuery, as Redmine relies on it. Ensure code is unobtrusive, modular, and maintainable. Use jQuery for DOM manipulation and event handling. Avoid ES6+ features that may not be supported in all Redmine environments. Ensure compatibility with the Rails asset pipeline and Redmine's frontend structure."
    },
    {
      "language": "css",
      "instruction": "Write modular, maintainable CSS for Redmine plugins. Follow BEM or similar naming conventions. Ensure styles do not conflict with Redmine core or other plugins. Use variables and mixins where appropriate."
    },
    {
      "language": "yaml",
      "instruction": "Generate valid YAML for Redmine plugin configuration, localization, or CI/CD. Use proper indentation and follow Redmine conventions for keys and structure."
    },
    {
      "language": "markdown",
      "instruction": "Write clear, well-structured Markdown for Redmine plugin documentation, including README and CHANGELOG files. Use proper headings, lists, and code blocks. Follow Redmine and open source documentation standards."
    },
    {
      "language": "html",
      "instruction": "Generate clean, semantic HTML for use in Redmine plugin views. Follow accessibility best practices and ensure compatibility with ERB templates and Rails helpers. Structure markup to integrate smoothly with Redmine's UI."
    },
    {
      "language": "rake",
      "instruction": "Write Rake tasks for Redmine plugins following Ruby and Rails conventions. Ensure tasks are idempotent, well-documented, and placed in the appropriate namespace. Use Redmine and Rails APIs where applicable."
    },
    {
      "text": "Tests for Redmine plugins",
      "instruction": "Generate Minitest tests for Redmine plugins. Follow Redmine and Rails testing conventions. Ensure tests are clear, maintainable, and cover edge cases. Use fixtures for test data. Structure tests to be independent and idempotent."
    },
    {
      "text": "Dev/Test setup",
      "instruction": "Use docker compose, the container is always named like the workspace name."
    },
    {
      "text": "General code generation",
      "instruction": "Write readable, maintainable code. Follow best practices for the specific language and framework. Use idiomatic constructs and avoid unnecessary complexity. Only add comments for edge cases. Generate valid code for the Rails version defined for the redmine version of the current project, you get the redmine version from the changelog in the root directory."
    }
  ]
}